name: X-UI Multiarch Image CI

on:
  push:
    branches:
      - master
  schedule:
    - cron: "42 13 * * 0,2,5"
  workflow_dispatch:

jobs:
  docker:
    runs-on: debian-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M')"

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/x-ui
          DATE=${{steps.date.outputs.date}}
          BRANCH=${GITHUB_REF##*/}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi

          BASE_TAG=latest
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${BASE_TAG}"
          else
            TAGS="${DOCKER_IMAGE}:${BASE_TAG},${DOCKER_IMAGE}:${DATE}"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=base_tag::${BASE_TAG}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/s390x
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.prep.outputs.docker_image }}:${{ steps.prep.outputs.base_tag }}
          cache-to: type=inline
